[tool.poetry]
name = "business-control-dev"
version = "0.0.1"
description = "Monorepo dev tooling (flake8, isort, black, mypy, pytest)"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
asgi-lifespan = "^2.1.0"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.43" }
pydantic-settings = "^2.10.1"
python-dotenv = "^1.1.1"

# [tool.poetry.group.dev.dependencies]
# black = "^24.8.0"
# isort = "^5.13.2"
# flake8 = "^7.1.1"
# flake8-bugbear = "^24.8.19"
# flake8-builtins = "^2.5.0"
# flake8-comprehensions = "^3.14.0"
# mypy = "^1.11.1"
# pytest = "^8.3.2"
# pytest-asyncio = "^0.23.8"
# pytest-cov = "^5.0.0"
# httpx = "^0.27.0"
# pre-commit = "^3.8.0"
# testcontainers = "^4.8.1"

# [build-system]
# requires = ["poetry-core>=1.9.0"]
# build-backend = "poetry.core.masonry.api"

# # ----------------------------
# # Настройки инструментов
# # ----------------------------

# [tool.black]
# line-length = 100
# target-version = ["py313"]
# exclude = '''
# (
#   ^services/.*/alembic/.* |
#   ^.venv/
# )
# '''

# [tool.isort]
# profile = "black"
# line_length = 100
# known_first_party = ["app", "common", "auth_client"]
# skip_glob = ["services/**/alembic/**", "*/.venv/*"]

# [tool.flake8]
# max-line-length = 100
# extend-ignore = ["E203", "W503"]  # совместимость с Black
# select = ["E", "F", "W", "B", "C4"]
# exclude = [
#   "services/**/alembic/**",
#   "*/.venv/*",
#   ".git",
#   "__pycache__",
#   "build",
#   "dist",
#   "tests",
# ]
# per-file-ignores = [
#   "services/**/alembic/**:E501"
# ]

# [tool.mypy]
# python_version = "3.13"
# plugins = ["sqlalchemy.ext.mypy.plugin"]
# ignore_missing_imports = true
# warn_unused_ignores = true
# warn_redundant_casts = true
# strict_optional = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
# explicit_package_bases = true
# namespace_packages = true
# # исключаем миграции и тесты
# exclude = "(^services/.*/alembic/|^services/.*/tests/|^tests/|^build/|^dist/|^__pycache__/|^\\.git/)"

# [tool.pytest.ini_options]
# minversion = "8.0"
# asyncio_mode = "auto"
# addopts = "-q -ra --cov=services --cov-report=term-missing"
# testpaths = ["services", "tests"]
# filterwarnings = ["ignore::DeprecationWarning"]
